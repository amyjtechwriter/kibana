openapi: 3.1.0
info:
  title: Saved objects
  description: OpenAPI schema for saved object endpoints
  version: '0.1'
  contact:
    name: Kibana Core Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
servers:
  - url: http://localhost:5601
    description: local
security:
  - basicAuth: []
  - apiKeyAuth: []
tags:
  - name: saved objects
    description: Manage Kibana saved objects, including dashboards, visualizations, and more.
paths:
  /api/encrypted_saved_objects/_rotate_key:
    post:
      summary: Rotate the encryption key for encrypted saved objects.
      operationId: rotateEncryptionKey
      description: |
        Superuser role required.

        If a saved object cannot be decrypted using the primary encryption key, then Kibana will attempt to decrypt it using the specified decryption-only keys. In most of the cases this overhead is negligible, but if you're dealing with a large number of saved objects and experiencing performance issues, you may want to rotate the encryption key.

        This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.
      tags:
        - saved objects
      parameters:
        - in: query
          name: batch_size
          schema:
            type: number
            default: 10000
          required: false
          description: |
            Specifies a maximum number of saved objects that Kibana can process in a single batch. Bulk key rotation is an iterative process since Kibana may not be able to fetch and process all required saved objects in one go and splits processing into consequent batches. By default, the batch size is 10000, which is also a maximum allowed value.
        - in: query
          name: type
          schema:
            type: string
          required: false
          description: |
            Limits encryption key rotation only to the saved objects with the specified type. By default, Kibana tries to rotate the encryption key for all saved object types that may contain encrypted attributes.
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    description: |
                      Indicates the total number of all encrypted saved objects (optionally filtered by the requested `type`), regardless of the key Kibana used for encryption.
                  successful:
                    type: number
                    description: |
                      Indicates the total number of all encrypted saved objects (optionally filtered by the requested `type`), regardless of the key Kibana used for encryption.

                      NOTE: In most cases, `total` will be greater than `successful` even if `failed` is zero. The reason is that Kibana may not need or may not be able to rotate encryption keys for all encrypted saved objects.
                  failed:
                    type: number
                    description: |
                      Indicates the number of the saved objects that were still encrypted with one of the old encryption keys that Kibana failed to re-encrypt with the primary key.
              examples:
                rotateEncryptionKeyResponse:
                  $ref: '#/components/examples/key_rotation_response'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '429':
          description: Already in progress.
          content:
            application/json:
              schema:
                type: object
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  /api/saved_objects/_export:
    post:
      summary: Retrieve sets of saved objects that you want to import into Kibana.
      operationId: exportSavedObjects
      description: |

        You must include `type` or `objects` in the request body.

        NOTE: The `savedObjects.maxImportExportSize` configuration setting limits the number of saved objects which may be exported.

        This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.
      tags:
        - saved objects
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                excludeExportDetails:
                  description: Do not add export details entry at the end of the stream.
                  type: boolean
                  default: false
                includeReferencesDeep:
                  description: Includes all of the referenced objects in the exported objects.
                  type: boolean
                objects:
                  description: A list of objects to export.
                  type: array
                  items:
                    type: object
                type:
                  description: The saved object types to include in the export. Use `*` to export all the types.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
            examples:
              exportSavedObjectsRequest:
                $ref: '#/components/examples/export_objects_request'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
              examples:
                exportSavedObjectsResponse:
                  $ref: '#/components/examples/export_objects_response'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  /api/saved_objects/_import:
    post:
      summary: Create sets of Kibana saved objects from a file created by the export API.
      operationId: importSavedObjects
      description: |
        Saved objects can be imported only into the same version, a newer minor on the same major, or the next major. Exported saved objects are not backwards compatible and cannot be imported into an older version of Kibana.

        This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.
      tags:
        - saved objects
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: query
          name: createNewCopies
          schema:
            type: boolean
          required: false
          description: |
            Creates copies of saved objects, regenerates each object ID, and resets the origin. When used, potential conflict errors are avoided. NOTE: This option cannot be used with the `overwrite` and `compatibilityMode` options.
        - in: query
          name: overwrite
          schema:
            type: boolean
          required: false
          description: |
            Overwrites saved objects when they already exist. When used, potential conflict errors are automatically resolved by overwriting the destination object. NOTE: This option cannot be used with the `createNewCopies` option.
        - in: query
          name: compatibilityMode
          schema:
            type: boolean
          required: false
          description: |
            Applies various adjustments to the saved objects that are being imported to maintain compatibility between different Kibana versions. Use this option only if you encounter issues with imported saved objects. NOTE: This option cannot be used with the `createNewCopies` option.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: |
                    A file exported using the export API. NOTE: The `savedObjects.maxImportExportSize` configuration setting limits the number of saved objects which may be included in this file. Similarly, the `savedObjects.maxImportPayloadBytes` setting limits the overall size of the file that can be imported.
            examples:
              importObjectsRequest:
                $ref: '#/components/examples/import_objects_request'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: |
                      Indicates when the import was successfully completed. When set to false, some objects may not have been created. For additional information, refer to the `errors` and `successResults` properties.
                  successCount:
                    type: integer
                    description: Indicates the number of successfully imported records.
                  errors:
                    type: array
                    items:
                      type: object
                    description: |
                      Indicates the import was unsuccessful and specifies the objects that failed to import.

                      NOTE: One object may result in multiple errors, which requires separate steps to resolve. For instance, a `missing_references` error and conflict error.
                  successResults:
                    type: array
                    items:
                      type: object
                    description: |
                      Indicates the objects that are successfully imported, with any metadata if applicable.

                      NOTE: Objects are created only when all resolvable errors are addressed, including conflicts and missing references. If objects are created as new copies, each entry in the `successResults` array includes a `destinationId` attribute.
              examples:
                importObjectsResponse:
                  $ref: '#/components/examples/import_objects_response'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  /api/saved_objects/_resolve_import_errors:
    post:
      summary: Resolve errors from the Import objects API.
      operationId: resolveImportErrors
      description: |
        To resolve errors, you can: 

        * Retry certain saved objects
        * Overwrite specific saved objects
        * Change references to different saved objects

        This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.
      tags:
        - saved objects
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: query
          name: compatibilityMode
          schema:
            type: boolean
          required: false
          description: |
            Applies various adjustments to the saved objects that are being imported to maintain compatibility between different Kibana versions. When enabled during the initial import, also enable when resolving import errors. This option cannot be used with the `createNewCopies` option.
        - in: query
          name: createNewCopies
          schema:
            type: boolean
          required: false
          description: |
            Creates copies of the saved objects, regenerates each object ID, and resets the origin. When enabled during the initial import, also enable when resolving import errors.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - retries
              properties:
                file:
                  description: The same file given to the import API.
                  type: string
                  format: binary
                retries:
                  description: The retry operations, which can specify how to resolve different types of errors.
                  type: array
                  items:
                    type: object
                    required:
                      - type
                      - id
                    properties:
                      type:
                        description: The saved object type.
                        type: string
                      id:
                        description: The saved object ID.
                        type: string
                      overwrite:
                        description: When set to `true`, the source object overwrites the conflicting destination object. When set to `false`, does nothing.
                        type: boolean
                      destinationId:
                        description: Specifies the destination ID that the imported object should have, if different from the current ID.
                        type: string
                      replaceReferences:
                        description: A list of `type`, `from`, and `to` used to change the object references.
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            from:
                              type: string
                            to:
                              type: string
                      ignoreMissingReferences:
                        description: When set to `true`, ignores missing reference errors. When set to `false`, does nothing.
                        type: boolean
            examples:
              resolveImportErrorsRequest:
                $ref: '#/components/examples/resolve_missing_reference_request'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: |
                      Indicates a successful import. When set to `false`, some objects may not have been created. For additional information, refer to the `errors` and `successResults` properties.
                  successCount:
                    type: number
                    description: |
                      Indicates the number of successfully resolved records.
                  errors:
                    type: array
                    description: |
                      Specifies the objects that failed to resolve.

                      NOTE: One object can result in multiple errors, which requires separate steps to resolve. For instance, a `missing_references` error and a `conflict` error.
                    items:
                      type: object
                  successResults:
                    type: array
                    description: |
                      Indicates the objects that are successfully imported, with any metadata if applicable.

                      NOTE: Objects are only created when all resolvable errors are addressed, including conflict and missing references.
                    items:
                      type: object
              examples:
                resolveImportErrorsResponse:
                  $ref: '#/components/examples/resolve_missing_reference_response'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: ApiKey
  examples:
    key_rotation_response:
      summary: Encryption key rotation using default parameters.
      value:
        total: 1000
        successful: 300
        failed: 0
    export_objects_request:
      summary: Export a specific saved object.
      value:
        objects:
          - type: dashboard
            id: be3733a0-9efe-11e7-acb3-3dab96693fab7
        includeReferencesDeep: false
    export_objects_response:
      summary: The export objects API response contains a JSON record for each exported object and an export result details record.
      value: |
        {"attributes":{"fieldFormatMap":"{\"hour_of_day\":{}}","name":"Kibana Sample Data Logs","runtimeFieldMap":"{\"hour_of_day\":{\"type\":\"long\",\"script\":{\"source\":\"emit(doc['timestamp'].value.getHour());\"}}}","timeFieldName":"timestamp","title":"kibana_sample_data_logs"},"coreMigrationVersion":"8.8.0","created_at":"2023-07-25T19:36:36.695Z","id":"90943e30-9a47-11e8-b64d-95841ca0b247","managed":false,"references":[],"type":"index-pattern","typeMigrationVersion":"8.0.0","updated_at":"2023-07-25T19:36:36.695Z","version":"WzM5LDJd"}
        {"excludedObjects":[],"excludedObjectsCount":0,"exportedCount":1,"missingRefCount":0,"missingReferences":[]}
    import_objects_request:
      value:
        file: file.ndjson
    import_objects_response:
      summary: The import objects API response indicates a successful import and the objects are created. Since these objects are created as new copies, each entry in the successResults array includes a destinationId attribute.
      value:
        successCount: 1
        success: true
        successResults:
          - type: index-pattern
            id: 90943e30-9a47-11e8-b64d-95841ca0b247
            meta:
              title: Kibana Sample Data Logs
              icon: indexPatternApp
            managed: false
            destinationId: 82d2760c-468f-49cf-83aa-b9a35b6a8943
    resolve_missing_reference_request:
      value:
        file: file.ndjson
        retries:
          - type: index-pattern
            id: my-pattern
            overwrite: true
          - type: visualization
            id: my-vis
            overwrite: true
            destinationId: another-vis
          - type: canvas
            id: my-canvas
            overwrite: true
            destinationId: yet-another-canvas
          - type: dashboard
            id: my-dashboard
    resolve_missing_reference_response:
      summary: Resolve missing reference errors.
      value:
        success: true
        successCount: 3
        successResults:
          - id: my-vis
            type: visualization
            meta:
              icon: visualizeApp
              title: Look at my visualization
          - id: my-search
            type: search
            meta:
              icon: searchApp
              title: Look at my search
          - id: my-dashboard
            type: dashboard
            meta:
              icon: dashboardApp
              title: Look at my dashboard
  parameters:
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
